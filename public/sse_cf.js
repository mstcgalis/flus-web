(function(){const video_player_url="";const baseUri="https://flus.fm";let subs={"station:flus.fm":{timezone:"Etc/UTC"},"global:time":{},};const autoplay=false;const sseUri=baseUri+"/api/live/nowplaying/sse?cf_connect="+JSON.stringify({subs:subs});Object.keys(subs).forEach((station)=>{subs[station]["nowplaying"]=null;subs[station]["last_sh_id"]=null;subs[station]["elapsed"]=0;subs[station]["duration"]=0;subs[station]["last_update"]=Date.now();subs[station]["interval_id"]=0;});let serverTime=0;const t={"Album art. Click to listen.":"Album art. Click to listen.","Click to listen":"Click to listen","Click to view":"Click to view",Live:"Live","Live: ":"Live: ",Offline:"Offline",Online:"Online","Song request":"Song request",};function getTimezoneName(type){const today=new Date();const short=today.toLocaleDateString(undefined);const full=today.toLocaleDateString(undefined,{timeZoneName:type});const shortIndex=full.indexOf(short);if(shortIndex>=0){const trimmed=full.substring(0,shortIndex)+full.substring(shortIndex+short.length);return trimmed.replace(/^[\s,.\-:;]+|[\s,.\-:;]+$/g,"")}else{return full}}function getTimeFromTimestamp(timestamp){let tmp=new Date(timestamp*1000);return(tmp.getHours().toString().padStart(2,"0")+":"+tmp.getMinutes().toString().padStart(2,"0"))}function minSec(duration){const minutes=Math.trunc(duration/60);const seconds=Math.trunc(duration%60);return `${String(minutes)}:${String(seconds).padStart(2,"0")}`}function getStationTime(station){let tz=subs[station]?.nowplaying?.station?.timezone||undefined;tz=tz||subs[station]?.timezone||"Etc/UTC";const now=new Date();const nowStation=new Date(now.toLocaleString("en-US",{timeZone:tz}));const diffMinutes=Math.round((nowStation-now)/60000);const hours=Math.trunc(diffMinutes/60);const minutes=Math.abs(diffMinutes%60);const stationTime=getTimeFromTimestamp(nowStation.getTime()/1000);const stationOffset=`${Intl.NumberFormat("en-US",{signDisplay:"exceptZero",}).format(hours)}:${String(minutes).padStart(2,"0")}`;return{time:stationTime,timezone:tz,timediffHHMM:stationOffset,timediffMinutes:diffMinutes}}const toKebabCase=(str)=>str&&str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g).map((x)=>x.toLowerCase()).join("-");function setElement(target,content,{addClasses=null,attrib=null,style=null,removeClasses=null,timeconvert=false}={}){let targets=Array.from(document.getElementsByClassName(target));targets.forEach((targ)=>{if(targ&&content){if(timeconvert){targ.textContent=getTimeFromTimestamp(content)}else{targ.textContent=content}}else if(targ&&content!==null){targ.textContent=""}if(targ&&attrib){Object.entries(attrib).forEach(([k,v])=>{targ.setAttribute(k,v)})}if(targ&&style){Object.entries(style).forEach(([k,v])=>{targ.style[k]=v})}if(targ&&removeClasses){targ.classList.remove(...removeClasses)}if(targ&&addClasses){targ.classList.add(...addClasses)}})}function startProgressBar(station,elapsed,duration){subs[station]["elapsed"]=elapsed;subs[station]["duration"]=duration;subs[station]["last_update"]=Date.now();if(subs[station]["interval_id"]==0){subs[station]["interval_id"]=setInterval(updateProgressBar,1000,station)}updateProgressBar(station)}function stopProgressBar(station){if(subs[station]["interval_id"]!==0){clearInterval(subs[station]["interval_id"])}subs[station]["interval_id"]=0}function updateProgressBar(station){let ch=station.split(":")[1]||null;ch=toKebabCase(ch);let now=Date.now();subs[station]["elapsed"]+=(now-subs[station]["last_update"])/1000;subs[station]["last_update"]=now;if(subs[station]["duration"]>0&&subs[station]["elapsed"]>subs[station]["duration"]){subs[station]["elapsed"]=subs[station]["duration"];stopProgressBar(station)}setElement("np-"+ch+"-song-progress",null,{attrib:{value:subs[station]["elapsed"],max:subs[station]["duration"],title:minSec(subs[station]["elapsed"])}});let width=(subs[station]["elapsed"]/subs[station]["duration"])*100.0;width=width>100?100:width;setElement("np-"+ch+"-song-progressbar",null,{style:{width:String(width)+"%"}});setElement("np-"+ch+"-song-elapsed",minSec(subs[station]["elapsed"]));}function updatePage(station){let ch=station.split(":")[1]||null;ch=toKebabCase(ch);const np=subs[station]?.nowplaying||null;if(np){let stationTime=getStationTime(station);setElement("np-"+ch+"-station-time",stationTime["time"]);setElement("np-"+ch+"-station-timezone",stationTime["timezone"]);setElement("np-"+ch+"-station-timediff-hhmm",stationTime["timediffHHMM"]);setElement("np-"+ch+"-station-timediff-minutes",String(stationTime["timediffMinutes"]));setElement("np-local-time",getTimeFromTimestamp(Date.now()/1000));setElement("np-local-timezone-short",getTimezoneName("short"));setElement("np-local-timezone-long",getTimezoneName("long"));setElement("np-"+ch+"-song-duration",minSec(np.now_playing.duration));startProgressBar(station,np.now_playing.elapsed,np.now_playing.duration);setElement("np-"+ch+"-station-listeners-total",String(np.listeners.total));setElement("np-"+ch+"-station-listeners-unique",String(np.listeners.unique));setElement("np-"+ch+"-station-listeners-current",String(np.listeners.current))}if(np&&np.now_playing.sh_id!==subs[station]["last_sh_id"]){console.log("Now Playing on "+ch+(np.is_online?" (online)":" (offline)")+": "+np.now_playing.song.text);subs[station]["last_sh_id"]=np.now_playing.sh_id;setElement("np-"+ch+"-song-artist",np.now_playing.song.artist);setElement("np-"+ch+"-song-title",np.now_playing.song.title);setElement("np-"+ch+"-song-text",np.now_playing.song.text);setElement("np-"+ch+"-song-album",np.now_playing.song.album);setElement("np-"+ch+"-song-albumart","",{attrib:{alt:t["Album art. Click to listen."],src:np.now_playing.song.art,}});setElement("np-"+ch+"-station-name",np.station.name,{attrib:{title:np.station.description}});setElement("np-"+ch+"-station-description",np.station.description);setElement("np-"+ch+"-station-url",np.station.url);setElement("np-"+ch+"-station-player-url",np.station.public_player_url);setElement("np-"+ch+"-station-player",null,{attrib:{href:np.station.public_player_url+(autoplay?"?autoplay=true":""),target:"playerWindow",title:t["Click to listen"]}});if(video_player_url){setElement("np-"+ch+"-video-player-url",video_player_url);setElement("np-"+ch+"-video-player",null,{attrib:{href:video_player_url,target:"playerWindow",title:t["Click to view"]}})}else{setElement("np-"+ch+"-video-player-url","");setElement("np-"+ch+"-video-player","")}if(np.is_online){setElement("np-"+ch+"-station-isonline",t["Online"],{addClasses:["label-success"],attrib:{style:"display: inline;"},removeClasses:["label-error"]})}else{setElement("np-"+ch+"-station-isonline",t["Offline"],{addClasses:["label-error"],attrib:{style:"display: inline;"},removeClasses:["label-success"]});stopProgressBar(station)}if(np.live.is_live){setElement("np-"+ch+"-show-islive",t["Live"],{attrib:{style:"display: inline;"}});setElement("np-"+ch+"-show-name",t["Live: "]+np.live.streamer_name,{removeClasses:["label","label-error"]})}else{setElement("np-"+ch+"-show-islive",t["Live"],{attrib:{style:"display: none;"}});if(np.is_online){setElement("np-"+ch+"-show-name",np.now_playing.playlist,{removeClasses:["label","label-error"]})}else{setElement("np-"+ch+"-show-name",t["Offline"],{addClasses:["label","label-error"]});stopProgressBar(station)}}if(np.now_playing.is_request){setElement("np-"+ch+"-song-isrequest",t["Song request"],{attrib:{style:"display: inline;"}})}else{setElement("np-"+ch+"-song-isrequest",t["Song request"],{attrib:{style:"display: none;"}})}}}function showOffline(){Object.keys(subs).forEach((station)=>{if(subs[station]["nowplaying"]&&subs[station]["last_sh_id"]!==null){console.warn("Now Playing: Setting",station,"offline");subs[station]["nowplaying"]["is_online"]=false;subs[station]["last_sh_id"]=null;updatePage(station);subs[station]["last_sh_id"]=null}})}let evtSource=null;function initEvents(){if(evtSource===null||evtSource.readyState===2){evtSource=new EventSource(sseUri);evtSource.onerror=(err)=>{console.error("Now Playing: EventSource failed:",err);showOffline();};evtSource.onopen=function(){console.log("Now Playing: Server connected.")};function handleData(payload){const jsonData=payload?.pub?.data??{};if(payload.channel==="global:time"){serverTime=jsonData.time}else{const station="station:"+jsonData.np?.station?.shortcode||null;if(station in subs){subs[station]["nowplaying"]=jsonData.np;updatePage(station)}}}evtSource.onmessage=(event)=>{const jsonData=JSON.parse(event.data);if("connect"in jsonData){const initialData=jsonData.connect.data??[];initialData.forEach((initialRow)=>handleData(initialRow))}else if("channel"in jsonData){handleData(jsonData)}}}}document.addEventListener("readystatechange",(event)=>{if(event.target.readyState==="complete"){initEvents()}});})();